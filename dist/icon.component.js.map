{"version":3,"file":"icon.component.js","sourceRoot":"","sources":["../src/icon.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEtD,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAEzC,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAE/C,OAAO,UAAU,MAAM,eAAe,CAAC;AACvC,OAAO,QAAQ,MAAM,iBAAiB,CAAC;AAGvC,IAAa,IAAI,GAAjB,MAAa,IAAK,SAAQ,IAAI;IAA9B;;QAGqC,SAAI,GAAW,EAAE,CAAC;QAClB,SAAI,GAAW,GAAG,CAAC;QAE5C,SAAI,GAAW,SAAS,CAAC;IAgBrC,CAAC;IAdQ,YAAY;QACjB,IAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;YACzC,MAAM,CAAC,KAAK,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;iBACtC,IAAI,CAAC,CAAC,KAAU,EAAE,EAAE;gBACnB,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;gBACpD,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;SACN;QACD,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC;IACnC,CAAC;IAES,MAAM;QACd,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACF,CAAA;AArBe,oBAAe,GAAG,CAAE,UAAU,CAAE,CAAC;AAEnB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;kCAA0B;AACzB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;kCAA2B;AAJ3C,IAAI;IADhB,aAAa,CAAC,SAAS,CAAC;GACZ,IAAI,CAsBhB;SAtBY,IAAI","sourcesContent":["import { customElement, property } from 'lit-element';\r\n\r\nimport { Base } from '@spectrum/sp-base';\r\n\r\nimport { Spectrum } from '@spectrum/sp-config';\r\n\r\nimport iconStyles from './icon.styles';\r\nimport template from './icon.template';\r\n\r\n@customElement('sp-icon')\r\nexport class Icon extends Base {\r\n  public static componentStyles = [ iconStyles ];\r\n\r\n  @property({ type: String }) public name: string = '';\r\n  @property({ type: String }) public size: string = 'S';\r\n\r\n  protected _svg: string = undefined;\r\n\r\n  public shouldUpdate() {\r\n    if((!this._svg) && this.size && this.name) {\r\n      import(`./${Spectrum.size}/${this.name}`)\r\n        .then((value: any) => {\r\n          this._svg = (value.default) ? value.default : value;\r\n          this.requestUpdate();\r\n        });\r\n    }\r\n    return (this._svg !== undefined);\r\n  }\r\n\r\n  protected render() {\r\n    return template.call(this);\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'sp-icon': Icon;\r\n  }\r\n}\r\n"]}